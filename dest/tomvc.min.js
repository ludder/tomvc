/*! ToMvc - v0.2.0 - 2014-12-27 23:06 - License: BSD */
;!function(a){"use strict";function b(){var a=this,b=function(b){a.call(this,b)};return b.prototype=Object.create(a.prototype),b.prototype.constructor=b,b}var c={},d=function(a){this.defaults={},this.views=[],this.models=[],this.events=[],g.call(this,this.defaults,a)},e=function(a){if(!a||!a.controller)throw"View constructor requires controller";if(this.controller=a.controller,!a.el)throw"View constructor requires DOM element";this.el=a.el,this.defaults={listeners:[]},g.call(this,this.defaults,a),this.setName(a.name),this.controller.registerView(this.getName())},f=function(a){if(this.defaults={listeners:[]},!a.controller)throw"Model constructor requires controller";this.controller=a.controller,g.call(this,this.defaults,a),this.setName(a.name),this.controller.registerModel(this.getName())};d.extend=e.extend=f.extend=b,d.prototype.getViews=function(){return this.views.slice()},d.prototype.getModels=function(){return this.models.slice()},d.prototype.getEvents=function(){return this.events.slice()},d.prototype.registerView=function(a){this.views.push(a)},d.prototype.registerModel=function(a){this.models.push(a)},d.prototype.addEvent=function(a,b){this.controller.events.push({eventname:a,callback:b})},d.prototype.triggerEvent=function(a,b){this.events.forEach(function(c){c.eventname===a&&c.callback(b)})},e.prototype.getDefaultName=function(){return"view"+(this.controller.getViews().length+1)},e.prototype.getName=function(){return this.name},e.prototype.setName=function(a){this.name=a||this.getDefaultName()},e.prototype.listenTo=function(a,b){this.controller.addEvent.call(this,a,b)},e.prototype.broadcast=function(a,b){this.controller.triggerEvent(a,b)},f.prototype.init=function(a){this.setName(a),d.addModel(this.name)},f.prototype.getDefaultName=function(){return"model"+(this.controller.getModels().length+1)},f.prototype.getName=function(){return this.name},f.prototype.setName=function(a){this.name=a||this.getDefaultName()},f.prototype.listenTo=function(a,b){this.controller.addEvent.call(this,a,b,this.lcontroller)},f.prototype.broadcast=function(a,b){this.controller.triggerEvent(a,b)},c.version="0.2.0",c.Controller=d,c.View=e,c.Model=f,a.ToMvc=a.ToMvc||c;var g=function(a){a=a||{};for(var b=1;b<arguments.length;b++)if(arguments[b])for(var c in arguments[b])"function"==typeof arguments[b][c]?this[c]=arguments[b][c]:arguments[b].hasOwnProperty(c)&&(a[c]=arguments[b][c]);return a}}("undefined"==typeof window?global:window);